{
	"name": "@coinversable/validana-server",
	"version": "2.1.1",
	"description": "The Validana server for handling client requests.",
	"author": "Coinversable BV",
	"homepage": "https://validana.io/",
	"license": "AGPL-3.0-only",
	"repository": {
		"type": "git",
		"url": "https://github.com/Coinversable/validana-server.git"
	},
	"main": "dist/index.js",
	"typings": "src/index.ts",
	"keywords": [
		"coinversable",
		"validana",
		"server",
		"backend"
	],
	"scripts": {
		"build": "tsc",
		"start": "node -e \"require('./dist/index.js').start(new Map().set('v1',new (require('./dist/basics/basichandler.js').default)()))\" dist/index.js",
		"tslint": "tslint --project tsconfig.json -c tslint.json",
		"keys": "node --no-warnings -e \"const PK = require('@coinversable/validana-core').PrivateKey; const key = process.argv[1] ? PK.fromWIF(process.argv[1]) : PK.generate(); console.log(key.toWIF(), key.publicKey.toString('hex'), key.getAddress())\"",
		"keysjson": "node --no-warnings -pe \"const PK = require('@coinversable/validana-core').PrivateKey; const key = process.argv[1] ? PK.fromWIF(process.argv[1]) : PK.generate(); JSON.stringify({privateKey: key.toWIF(), publicKey: key.publicKey.toString('hex'), address: key.getAddress()})\""
	},
	"files": [
		"dist",
		"src"
	],
	"dependencies": {
		"@coinversable/validana-core": "^2.0.1",
		"@types/node": "*",
		"@types/pg": "^7.4.9",
		"@types/ws": "^6.0.0",
		"pg": "^7.4.1",
		"ws": "^7.0.0"
	},
	"devDependencies": {
		"typescript":"^3.7.0",
		"tslint": "^5.0.0"
	}
}
